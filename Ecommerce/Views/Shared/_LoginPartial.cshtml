@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">You <span class="fa fa-user-circle"> </span>@*   @UserManager.GetUserName(User)! *@</a>
    </li>
    <li class="nav-item">
            <a id="logoutForm" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                Logout <span class="fa fa-sign-out"> </span>
        </a>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link text-light" id="register" asp-area="Identity" asp-page="/Account/Register">Sign In <span class="fa fa-sign-in"></span></a>
    </li>
   @*  <li class="nav-item">
        <a class="nav-link " id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li> *@
}
</ul>
